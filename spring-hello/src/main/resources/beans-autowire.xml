<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p" xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

    <context:property-placeholder location="classpath:db.properties"></context:property-placeholder>

    <bean id="address" class="com.wufuqiang.spring.beans.Address" p:city="beijing" p:street="huilongguan"></bean>
    <bean id="car" class="com.wufuqiang.spring.beans.Car"
          p:brand="huangguan" p:corp="riben" p:maxSpeed="250" p:price="25000"
          init-method="init" destroy-method="destroy"></bean>
    <!--<bean id="newperson" class="com.wufuqiang.spring.beans.NewPerson" p:name="Mr.Wu" p:address-ref="address" p:car-ref="car"></bean>-->
    <!--
        可以使用autowire属性指定自动装配的方式
        byName根据bean容器的名字和当前bean的setter风格的属性名进行自动装配，若有则匹配。
        byType根据bean的类型和当前bean的属性的类型进行自动装配。若ioc容器中有1个以上的类型匹配的bean，则抛异常。
    -->
    <bean id="newperson" class="com.wufuqiang.spring.beans.NewPerson" p:name="Mr.Wu" autowire="byName"></bean>

    <!--
        bean配置的继承：使用bean的parent属性指定继承哪个bean的配置
    -->
    <bean id="address2" class="com.wufuqiang.spring.beans.Address" p:street="houchangcun" parent="address"></bean>

    <!--抽象bean：bean的abstract属性为true的bean。这样的bean不能被IOC容器实例化，只用来被继承配置
        若某一个bean的class属性没有指定，则该bean必须是一个抽象bean
    -->
    <bean id="address3" class="com.wufuqiang.spring.beans.Address" p:city="ShangHai" p:street="nanjinglu" abstract="true"></bean>
    <bean id="address4" class="com.wufuqiang.spring.beans.Address" p:city="${user}" p:street="${password}"></bean>

    <bean id="newperson2" class="com.wufuqiang.spring.beans.NewPerson" p:name="WUFQ" p:address-ref="address2" depends-on="car" scope="prototype"></bean>

    <bean class="com.wufuqiang.spring.processor.MyBeanPostProcessor"></bean>

</beans>